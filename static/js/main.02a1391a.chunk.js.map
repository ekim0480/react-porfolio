{"version":3,"sources":["components/Navbar/index.js","pages/About.js","pages/Contact.js","components/ProjectList/index.js","components/ProjectCard/index.js","pages/Portfolio.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","About","src","alt","Contact","type","id","placeholder","rows","href","ProjectList","props","style","backgroundImage","title","console","log","repoUrl","ProjectCard","map","project","Portfolio","Footer","App","basename","process","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.02a1391a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar d-flex flex-column d-sm-flex flex-sm-row navbar-expand navbar-dark bg-primary\">\n      <div className=\"d-flex flex-grow-1\">\n        <span className=\"w-100\"></span>\n        <Link to=\"/\" className=\"navbar-brand mx-auto\">\n          Eddie Kim\n        </Link>\n        <div className=\"w-100\"></div>\n      </div>\n      <div className=\"collapse navbar-collapse flex-grow-1 text-right\">\n        <ul className=\"navbar-nav ml-auto flex-nowrap\">\n          <li className=\"nav-item\">\n            <Link to=\"/\" className=\"nav-link\">\n              About\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/portfolio\" className=\"nav-link\">\n              Portfolio\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/contact\" className=\"nav-link\">\n              Contact\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\"\n\nfunction About() {\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron\">\n        <h1>About Me</h1>\n        <hr className=\"my-4\" />\n        <img\n          className=\"selfportrait\"\n          src=\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.0-9/222515_503360721063_7655_n.jpg?_nc_cat=108&_nc_sid=cdbe9c&_nc_ohc=YItFXvFj1OEAX-JOVol&_nc_ht=scontent-ort2-2.xx&oh=1835b26a32f0bbca039cb1be39045889&oe=5FB2441C\"\n          alt=\"\"\n        />\n        <p>\n          Welcome!  My name is Eddie Kim and I am currently learning coding.\n        </p>\n        <p>\n          I am currently in the Chicagoland area and I work at a travel agency run by my parents and invest in real estate.\n        </p>\n        <p>\n          During my free time, I like to play almost any sport, go to the gym, eat good food, play video games, and code!\n        </p>\n        <p>\n          I think my current instructor is super smart and really knows his coding!  The TAs are just as awesome as well!\n        </p>\n        <p>\n          Please check back for more updates.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport \"./style.css\"\n\nfunction Contact() {\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron\">\n        <h1>Contact Me</h1>\n        <hr className=\"my-4\" />\n        <form>\n          <div className=\"form-group\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"username\"\n              placeholder=\"Jane Doe\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"useremail\"\n              placeholder=\"name@example.com\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Message</label>\n            <textarea\n              className=\"form-control\"\n              id=\"usermessage\"\n              rows=\"6\"\n            ></textarea>\n          </div>\n        </form>\n        <div className=\"contactmelinks\">\n          <ul>\n            <li>\n              <a href=\"https://docs.google.com/document/d/1MqHmtXrz86U_egdg2ut--5FD_rafg94MT7TdZRoyz74/edit?usp=sharing\">Resume</a>\n            </li>\n            <li>\n              <a href=\"https://www.facebook.com/\">Facebook</a>\n            </li>\n            <li>\n              <a href=\"https://www.linkedin.com/\">LinkedIn</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\r\n\r\nconst ProjectList = (props) => {\r\n  return (\r\n    <div className=\"col-sm-6\">\r\n      <div className=\"card\" >\r\n        <div className=\"card-body\" style={{ backgroundImage: `url(${props.backgroundImage })`}}>\r\n          <h5 className=\"card-title\"></h5>\r\n          <p className=\"card-text\"></p>\r\n          <a\r\n            href={props.href}\r\n            \r\n            className=\"btn bg-primary text-white\"\r\n          >\r\n            {props.title}\r\n          </a>\r\n        </div>\r\n        {console.log(props)}\r\n        <a href={props.repoUrl} className=\"btn bg-primary text-white\">\r\n          GitHub Repo\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport ProjectList from \"../ProjectList\";\r\n\r\nconst ProjectCard = (props) => {\r\n  // array of projects and their data here\r\n  //  Could not figure out how to make background images work.\r\n  const projects = [\r\n    {\r\n      title: \"Password Generator\",\r\n      href: \"https://ekim0480.github.io/homework-03/\",\r\n      repoUrl: \"https://github.com/ekim0480/homework-03\",\r\n      backgroundImage: \"../../images/pwgenbg.jpg\",\r\n    },\r\n    {\r\n      title: \"JavaScript Quiz\",\r\n      href: \"https://ekim0480.github.io/homework-04/\",\r\n      repoUrl: \"https://github.com/ekim0480/homework-04\",\r\n    },\r\n    {\r\n      title: \"Workday Scheduler\",\r\n      href: \"https://ekim0480.github.io/homework-05/\",\r\n      repoUrl: \"https://github.com/ekim0480/homework-05\",\r\n    },\r\n    {\r\n      title: \"Weather Dashboard\",\r\n      href: \"https://ekim0480.github.io/homework-06/\",\r\n      repoUrl: \"https://github.com/ekim0480/homework-06\",\r\n    },\r\n    {\r\n      title: \"Dinner Decider\",\r\n      href: \"https://ekim0480.github.io/DinnerDecider/\",\r\n      repoUrl: \"https://github.com/ekim0480/DinnerDecider\",\r\n    },\r\n    {\r\n      title: \"The NXT1\",\r\n      href: \"https://kurtrocioeddieapp.herokuapp.com/\",\r\n      repoUrl: \"https://github.com/ekim0480/project2\",\r\n    },\r\n  ];\r\n\r\n  // map each project into its own card\r\n  return (\r\n    <>\r\n      {projects.map((project) => (\r\n        <ProjectList\r\n          title={project.title}\r\n          href={project.href}\r\n          repoUrl={project.repoUrl}\r\n          backgroundImage={project.backgroundImage}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from 'react'\nimport ProjectCard from '../components/ProjectCard'\nimport \"./style.css\"\n\n// Will need to look into implementing a row/column system.\nfunction Portfolio() {\n  return (\n    <div>\n      <ProjectCard />\n    </div>\n  )\n}\n\nexport default Portfolio\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return <footer className=\"bg-primary\">&copy; <a id=\"emailLink\" href=\"mailto: ekim0480@gmail.com\">ekim0480@gmail.com</a></footer>;\n}\n\nexport default Footer;\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport About from \"./pages/About\";\nimport Contact from \"./pages/Contact\";\nimport Portfolio from \"./pages/Portfolio\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n \n  return (\n\n \n      <Router basename={process.env.PUBLIC_URL}>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <About />\n          </Route>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/portfolio\">\n            <Portfolio />\n          </Route>\n          <Route exact path=\"/contact\">\n            <Contact />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}